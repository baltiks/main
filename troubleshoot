#include <iomanip>
#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define pos arr[posX][posY]
#define mainPathPos mainPathArray[currentX][currentY]

using namespace std;

class generate
{
public:
	bool mainPathArray[10][10];
	int pathLength = 10;

	void mainPath()
	{
		for (int i = 0; i < size(mainPathArray); ++i) for (int h = 0; h < size(mainPathArray); ++h) {
			mainPathArray[i][h] = false;
		}

		int currentX = 0, currentY = 0;
		mainPathPos = true;

		for (int i = 0; i < pathLength; ++i)
		{
			int a = rand() % 6;
			if ((a == 0 || a == 1) && (currentX != 0)) --currentX;
			else if ((a == 2 || a == 3)) ++currentX;
			else if ((a == 4 || a == 5)) ++currentY;
			mainPathPos = true;
			cout << pathLength << ' ' << currentX << ' ' << currentY << '\n';
		}
	}
};

void draw(bool arr[10][10], int arrSize, int prevPosX, int prevPosY)
{
	generate gen;

	/*for (int i = 0; i < arrSize - 1; ++i)
	{
		for (int h = 0; h < arrSize - 1; ++h)
		{
			if (arr[h][i]) cout << "[X] ";
			else if (h == prevPosX && i == prevPosY) cout << "[.] ";
			else if (h == true) cout << "[H] ";
			else cout << "[ ] ";
		}
		cout << '\n' << '\n';
	}
	cout << "\n\n";*/
	for (int i = 0; i < arrSize - 1; ++i)
	{
		for (int h = 0; h < arrSize - 1; ++h)
		{
			if (arr[h][i]) cout << "[X] ";
			else if (gen.mainPathArray[h][i] == true) cout << "[H] ";
			else cout << "[ ] ";
		}
		cout << '\n' << '\n';
	}
}

int main()
{
	srand(time(NULL));
	int posX = 0, posY = 0, prevPosX, prevPosY;
	bool arr[10][10] = {false};
	arr[posX][posY] = true;

	int arrSize = size(arr);

	generate gen;
	gen.mainPath();

	for (int i = 0; i < arrSize - 1; ++i)
	{
		for (int h = 0; h < arrSize - 1; ++h)
		{
			if (arr[h][i]) cout << "[X] ";
			else if (gen.mainPathArray[h][i] == true) cout << "[H] ";
			else cout << "[ ] ";
		}
		cout << '\n' << '\n';
	}

	bool exitBool = false;

	do {
		char a;
		cin >> a;
		pos = false;
		prevPosX = posX;
		prevPosY = posY;
		if (a == 'w' && posY != 0) --posY;
		else if (a == 's' && posY != 9) ++posY;
		else if (a == 'a' && posX != 0) --posX;
		else if (a == 'd' && posX != 9) ++posX;
		else if (a == 'x') exitBool = true;
		pos = true;
		draw(arr, arrSize, prevPosX, prevPosY);
	} while (!exitBool);

	for (int i = 0; i < arrSize - 1; ++i)
	{
		for (int h = 0; h < arrSize - 1; ++h)
		{
			if (arr[h][i]) cout << "[X] ";
			else if (gen.mainPathArray[h][i] == true) cout << "[H] ";
			else cout << "[ ] ";
		}
		cout << '\n' << '\n';
	}

	return 0;
}
